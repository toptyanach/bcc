#!/usr/bin/env python3
"""
Diagnostic test for PaddleOCR output structure
"""

import sys
import os
from pathlib import Path

# Add src directory to path
src_path = Path(__file__).parent / "scr"
sys.path.insert(0, str(src_path))

def test_paddle_debug():
    """Test PaddleOCR with debug output"""
    try:
        print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ PaddleOCR...")
        from ocr_paddle import run_paddle
        
        # Test with a sample image
        test_image = "scr/uploads/20250914_230630_2025-09-14_225307.png"
        if os.path.exists(test_image):
            print(f"üìÅ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º: {test_image}")
            print("=" * 50)
            result = run_paddle(test_image, lang='ru')
            print("=" * 50)
            
            print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: —Ç–∏–ø={type(result)}, –¥–ª–∏–Ω–∞={len(result) if hasattr(result, '__len__') else 'N/A'}")
            
            if isinstance(result, list):
                print(f"üìù –ü–µ—Ä–≤—ã–µ 5 —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:")
                for i, item in enumerate(result[:5]):
                    print(f"  {i+1}. {item}")
            else:
                print(f"üìù –†–µ–∑—É–ª—å—Ç–∞—Ç (–ø–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤): {str(result)[:200]}")
                
            return True
        else:
            print(f"‚ùå –¢–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: {test_image}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ PaddleOCR...")
    test_paddle_debug()
    print("\nüîß –≠—Ç–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ–º–æ–∂–µ—Ç –ø–æ–Ω—è—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö PaddleOCR")