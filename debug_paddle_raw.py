#!/usr/bin/env python3
"""
Simple debug test for PaddleOCR raw output
"""

import sys
import os
from pathlib import Path

# Add src directory to path
src_path = Path(__file__).parent / "scr"
sys.path.insert(0, str(src_path))

def debug_paddle_raw():
    """Debug PaddleOCR raw output directly"""
    try:
        print("üîç –û—Ç–ª–∞–¥–∫–∞ —Å—ã—Ä–æ–≥–æ –≤—ã–≤–æ–¥–∞ PaddleOCR...")
        from ocr_paddle import get_paddle_instance
        
        # Test with a sample image
        test_image = "scr/uploads/20250914_230933_2025-09-14_225307.png"
        if not os.path.exists(test_image):
            print(f"‚ùå –¢–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: {test_image}")
            return False
            
        print(f"üìÅ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º: {test_image}")
        
        # Get PaddleOCR instance
        ocr = get_paddle_instance(lang='ru')
        
        # Get raw output directly
        print("üîß –ü–æ–ª—É—á–∞–µ–º —Å—ã—Ä–æ–π –≤—ã–≤–æ–¥ PaddleOCR...")
        raw_result = ocr.ocr(str(test_image))
        
        print("=" * 60)
        print(f"üìä –°—ã—Ä–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:")
        print(f"   –¢–∏–ø: {type(raw_result)}")
        print(f"   –î–ª–∏–Ω–∞: {len(raw_result) if hasattr(raw_result, '__len__') else 'N/A'}")
        print(f"   –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {repr(raw_result)}")
        print("=" * 60)
        
        if raw_result and len(raw_result) > 0:
            print(f"üìä –ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç:")
            print(f"   –¢–∏–ø: {type(raw_result[0])}")
            print(f"   –î–ª–∏–Ω–∞: {len(raw_result[0]) if hasattr(raw_result[0], '__len__') else 'N/A'}")
            
            if hasattr(raw_result[0], '__iter__') and not isinstance(raw_result[0], str):
                print(f"   –ü–µ—Ä–≤—ã–µ 3 —ç–ª–µ–º–µ–Ω—Ç–∞:")
                try:
                    for i, item in enumerate(list(raw_result[0])[:3]):
                        print(f"     {i}: {repr(item)}")
                except Exception as e:
                    print(f"     –û—à–∏–±–∫–∞ –∏—Ç–µ—Ä–∞—Ü–∏–∏: {e}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –æ—Ç–ª–∞–¥–∫–∏ —Å—ã—Ä–æ–≥–æ PaddleOCR...")
    debug_paddle_raw()
    print("\nüîß –≠—Ç–∞ –æ—Ç–ª–∞–¥–∫–∞ –ø–æ–∫–∞–∂–µ—Ç —Ç–æ—á–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –≤—ã–≤–æ–¥–∞ PaddleOCR")